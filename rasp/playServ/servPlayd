#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin

. /lib/lsb/init-functions

DAEMON=/usr/local/bin/twistd
PIDFILE=/var/run/servPlayd.pid
PLAYDIR=/home/xbian/tools/pifm/playServ
PLAYSERV=$PLAYDIR/servMain.py
LOG=/var/log/servPlayd.log

test -x $DAEMON || exit 5

LOCKFILE=/var/lock/servPlayd.lock

lock() {
	if [ -x /usr/bin/lockfile-create ]; then
		lockfile-create $LOCKFILE
		lockfile-touch $LOCKFILE &
		LOCKTOUCHPID="$!"
	fi
}

unlock() {
	if [ -x /usr/bin/lockfile-create ] ; then
		kill $LOCKTOUCHPID
		lockfile-remove $LOCKFILE
	fi
}

RUNASUSER=root
UGID=$(getent passwd $RUNASUSER | cut -f 3 -d:) || true
if test "$(uname -s)" = "Linux"; then
        PLAYD_OPTS="$PLAYD_OPTS -y $PLAYSERV -u $UGID -d $PLAYDIR --pidfile=$PIDFILE --logfile=$LOG"
fi

case $1 in
	start)
		log_daemon_msg "Starting Play server" "playServd"
		if [ -z "$UGID" ]; then
			log_failure_msg "user \"$RUNASUSER\" does not exist"
			exit 1
		fi
		lock
		#echo ""
		#echo $PLAYD_OPTS
  		start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --startas $DAEMON -- $PLAYD_OPTS
		status=$?
		unlock
		log_end_msg $status
  		;;
	stop)
		log_daemon_msg "Stopping Play server" "playServd"
  		start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
		log_end_msg $?
		rm -f $PIDFILE
  		;;
	restart|force-reload)
		$0 stop && sleep 2 && $0 start
  		;;
	try-restart)
		if $0 status >/dev/null; then
			$0 restart
		else
			exit 0
		fi
		;;
	reload)
		exit 3
		;;
	status)
		status_of_proc $DAEMON "Play server"
		;;
	*)
		echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
		exit 2
		;;
esac
